"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-auth', 'list');
class List extends command_1.SfdxCommand {
    async run() {
        try {
            const auths = await core_1.AuthInfo.listAllAuthorizations();
            const hasErrors = auths.filter((auth) => !!auth.error).length > 0;
            const columns = ['alias', 'username', 'orgId', 'instanceUrl', 'oauthMethod'];
            if (hasErrors) {
                columns.push('error');
            }
            this.ux.styledHeader('authenticated orgs');
            this.ux.table(auths, columns);
            return auths;
        }
        catch (err) {
            this.ux.log(messages.getMessage('noResultsFound'));
            return [];
        }
    }
}
exports.default = List;
List.description = messages.getMessage('description');
List.aliases = ['force:auth:list'];
List.flagsConfig = {};
//# sourceMappingURL=list.js.map